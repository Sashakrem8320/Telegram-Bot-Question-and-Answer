import telebot
from telebot import types
from Modules import module
from Modules import buttons

bot = telebot.TeleBot(module.getToken())

tags =  [

    "–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è",
    "–ø—Ä–æ–µ–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—à–∏–Ω",
    "—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞",
    "–ª–∞–∑–µ—Ä–Ω–∞—è —Ä–µ–∑–∫–∞",
    "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è",
    "–∏–Ω–∂–µ–Ω–µ—Ä–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞",
    "—Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã",
    "–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–æ–≤",
    "—Ä–æ–±–æ—Ç–æ—Ç–µ—Ö–Ω–∏–∫–∞",
    "–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ—Ü–µ—Å—Å–∞–º–∏",
    "–∞–≤—Ç–æ–º–æ–±–∏–ª–µ—Å—Ç—Ä–æ–µ–Ω–∏–µ"
]

def immitation_question(message):
    module.send_message(message, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–º—É —Ç–µ–≥–æ–≤',
                        module.getMarkup(message))
    ontag_i(message)

def removeltag_i(message):
    from Handlers.Direct import getStep
    a = getStep(message.from_user.id)["callt"]["tags"]
    if len(a) > 0:
        a.pop(len(a) - 1)
        if getStep(message.from_user.id)["text"] != "ontag":
            buttons.updatepanel(message.from_user.id, message.chat.id,
                                getStep(message.from_user.id)["callt"]["start"])
        else:
            bot.send_message(message.chat.id, "cur tags: " + str(getStep(message.from_user.id)["callt"]["tags"]))

def ontag_i(message):
    if message.text == "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å.":
        generation(message)
    elif message.text == "–£–±—Ä–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ç–µ–≥.":
        removeltag_i(message)
    elif message.text in tags:
        from Handlers import Direct
        if not (message.text in Direct.getStep(message.from_user.id)["callt"]["tags"]):
            Direct.getStep(message.from_user.id)["callt"]["tags"].append(message.text)
            bot.send_message(message.chat.id,
                             "–í–∞—à–∏ —Ç–µ–≥:" + str(Direct.getStep(message.from_user.id)["callt"]["tags"]))

def generation(message):
    from freeGPT import AsyncClient
    from asyncio import run
    from Handlers import Direct
    tema = ""
    for i in range(len(Direct.getStep(message.from_user.id)["callt"]["tags"])):
        tema += (str(Direct.getStep(message.from_user.id)["callt"]["tags"][i]) + " –∏ ")

    async def main():
        prompt = "–°–≥–µ–Ω–µ—Ä–∏—Ä—É–π –≤–æ–ø—Ä–æ—Å –Ω–∞ —Ç–µ–º–∞—Ç–∏–∫—É" + tema
        try:
            resp = await AsyncClient.create_completion("gpt3", prompt)

            module.send_message(message, f"–ò–ò: {resp}", module.getMarkup(call.message, listmenu=True))



        except Exception as e:
            module.send_message(call.message, f"ü§ñ: –û—à–∏–±–∫–∞ {e}", module.getMarkup(call.message, listmenu=True))

    run(main())